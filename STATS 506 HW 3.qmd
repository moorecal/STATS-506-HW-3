---
title: "STATS 506 HW 3"
author: "Calder Moore"
format: pdf
editor: visual
---

# STATS 506 HW 3

## Problem 1 -

### a)

```{r}
library(haven)

audio <- read_xpt("AUX_I.xpt")
demo <- read_xpt("DEMO_I.xpt")

audio_demo <- merge(audio, demo, by = "SEQN")
dim(audio_demo)
```

### b)

```{r}
audio_demo$RIAGENDR[audio_demo$RIAGENDR == 1] <- 0 #male
audio_demo$RIAGENDR[audio_demo$RIAGENDR == 2] <- 1 #female
audio_demo$RIAGENDR <- factor(audio_demo$RIAGENDR)

audio_demo$DMDCITZN[audio_demo$DMDCITZN == 1] <- 0 #citizen by birth or naturalization
audio_demo$DMDCITZN[audio_demo$DMDCITZN == 2] <- 1 #non-citizen
audio_demo$DMDCITZN[audio_demo$DMDCITZN == 7] <- NA #refused: 9 observations
audio_demo$DMDCITZN[audio_demo$DMDCITZN == 9] <- NA #don't know: 7 observations
audio_demo$DMDCITZN <- factor(audio_demo$DMDCITZN)

#household size for kids under 5 seems to be okay

#drop groups 12 and 13 since they are redundant and don't have many observations (~450 out of ~10,000)
audio_demo <- subset(audio_demo, !(INDHHIN2 %in% c(12, 13)))
audio_demo$INDHHIN2[audio_demo$INDHHIN2 == 77] <- NA #refused: 220 obs
audio_demo$INDHHIN2[audio_demo$INDHHIN2 == 99] <- NA #don't know: 134 obs
```

### c)

```{r}
library(knitr)

R1 <- glm(AUXTWIDR ~ RIAGENDR, family = "poisson", data = audio_demo)
R2 <- glm(AUXTWIDR ~ RIAGENDR + DMDCITZN + DMDHHSZA + INDHHIN2, family = "poisson", data = audio_demo)
L1 <- glm(AUXTWIDL ~ RIAGENDR, family = "poisson", data = audio_demo)
L2 <- glm(AUXTWIDL ~ RIAGENDR + DMDCITZN + DMDHHSZA + INDHHIN2, family = "poisson", data = audio_demo)

#exponentiated coefficient is another way to calculate incidence ratio
GenderIRR <- exp(c(R1$coefficients[2], R2$coefficients[2], L1$coefficients[2], L2$coefficients[2]))
CitznIRR <- exp(c(NA, R2$coefficients[3], NA, L2$coefficients[3]))
HHSZIRR <- exp(c(NA, R2$coefficients[4], NA, L2$coefficients[4]))
HHINIRR <- exp(c(NA, R2$coefficients[5], NA, L2$coefficients[5]))

#use formula for pseudo-R^2
pseudoR2 <- c(1-R1$deviance/R1$null.deviance, 
              1-R2$deviance/R2$null.deviance, 
              1-L1$deviance/L1$null.deviance, 
              1-L2$deviance/L2$null.deviance)

#sample size
R1n <- R1$df.residual + R1$rank
R2n <- R2$df.residual + R2$rank
L1n <- L1$df.residual + L1$rank
L2n <- L2$df.residual + L2$rank

sampsize <- c(R1n, R2n, L1n, L2n)

AIC <- c(R1$aic, R2$aic, L1$aic, L2$aic)

tymptable <- data.frame(Model = c("R1", "R2", "L1", "L2"),
                        `Gender IRR` = GenderIRR,
                        `Citizenship IRR` = CitznIRR,
                        `HHSize IRR` = HHSZIRR,
                        `HHIncome IRR` = HHSZIRR,
                        `Pseudo R^2` = pseudoR2,
                        `Sample Size` = sampsize,
                        AIC = AIC)

kable(tymptable, digits = 4)
```

### d)

Based on the IRR from the gender variable for model L2, we can say that women have a higher incidence than men of about 1.8%.

```{r}
summary(L2)
```

The coefficient on the gender variable in the L2 model is significant at the 99.9% level, suggesting that there is a difference between men and women.

## Problem 2 - Sakila

### a)

```{r}
library(DBI)

sakila <- dbConnect(RSQLite::SQLite(), "sakila_master.db")
Rsakilacustomer <- dbGetQuery(sakila, "SELECT * FROM customer")

#SQL
#multiply the SUM(active) by 100.0 to make a percent and to get around integer division
SQLcustomer <- dbGetQuery(sakila, "SELECT store_id, COUNT(customer_id) AS customercount, 100.0 * SUM(active)/COUNT(customer_id) as percentactive
                    FROM customer
                    GROUP BY store_id")

SQLcustomer

#R
store1 <- subset(Rsakilacustomer, store_id == 1)
store2 <- subset(Rsakilacustomer, store_id == 2)

customers <- matrix(c(1, 2, nrow(store1), nrow(store2), 100*sum(as.numeric(store1$active))/nrow(store1), 100*sum(as.numeric(store2$active))/nrow(store2)), nrow = 2)
colnames(customers) <- c("Store", "Customer Count", "Percent Active")

customers

library(microbenchmark)

microbenchmark(SQLcustomer)
microbenchmark(customers)
```

They are both quite fast in this case.

### b)

```{r}

countries <- dbGetQuery(sakila,
                        "SELECT CONCAT(s.first_name, ' ', s.last_name) AS name, co.country
                         FROM staff AS s
                            INNER JOIN address AS a ON a.address_id = s.address_id
                            INNER JOIN city AS c ON a.city_id = c.city_id
                            INNER JOIN country AS co ON co.country_id = c.country_id")

countries

sakstaff <- dbGetQuery(sakila, "SELECT * FROM staff")
sakadd <- dbGetQuery(sakila, "SELECT * FROM address")
sakcity <- dbGetQuery(sakila, "SELECT * FROM city")
sakcountry <- dbGetQuery(sakila, "SELECT * FROM country")

Rsak <- merge(sakcountry, merge(sakcity, merge(sakadd, sakstaff, by = "address_id"), by = "city_id"), by = "country_id")

staffmat <- matrix(c(paste(Rsak$first_name, Rsak$last_name), Rsak$country), nrow = 2)
colnames(staffmat) <- c("Name", "Country")

staffmat

microbenchmark(countries)
microbenchmark(Rsak)
```

Again, similarly speedy.

### c)

```{r}
films <- dbGetQuery(sakila, "SELECT f.title, p.amount
                             FROM film AS f
                                INNER JOIN inventory AS i ON f.film_id = i.film_id
                                INNER JOIN rental AS r ON i.inventory_id = r.inventory_id
                                INNER JOIN payment AS p ON r.rental_id = p.rental_id
                                WHERE p.amount = (
                                  SELECT MAX(amount)
                                  FROM payment
                                ) ORDER BY f.title")
films


sakfilm <- dbGetQuery(sakila, "SELECT * FROM film")
sakin <- dbGetQuery(sakila, "SELECT * FROM inventory")
sakrent <- dbGetQuery(sakila, "SELECT * FROM rental")
sakpay <- dbGetQuery(sakila, "SELECT * FROM payment")

Rsakpay <- merge(sakpay, merge(sakrent, merge(sakin, sakfilm, by = "film_id"), by = "inventory_id"), by = "rental_id")

filmmat <- matrix(c(Rsakpay$title[Rsakpay$amount == max(Rsakpay$amount)], Rsakpay$amount[Rsakpay$amount == max(Rsakpay$amount)]), ncol = 2)
colnames(filmmat) <- c("Film", "Value")

filmmat

microbenchmark(films)
microbenchmark(Rsakpay)
```

Still similar run times.

## Problem 3 - Australian Records

### a)

```{r}

```









